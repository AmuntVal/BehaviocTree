// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;

///<<< BEGIN WRITING YOUR CODE FILE_INIT
using UnityEngine;
///<<< END WRITING YOUR CODE

public class HoverBotAgent : behaviac.Agent
///<<< BEGIN WRITING YOUR CODE HoverBotAgent
///<<< END WRITING YOUR CODE
{
	private float TargetDist = 0f;
	public void _set_TargetDist(float value)
	{
		TargetDist = value;
	}
	public float _get_TargetDist()
	{
		return TargetDist;
	}

	public behaviac.EBTStatus DoAttack()
	{
///<<< BEGIN WRITING YOUR CODE DoAttack
        m_EnemyController.OrientWeaponsTowards(m_EnemyController.knownDetectedTarget.transform.position);
        m_EnemyController.TryAtack(m_EnemyController.knownDetectedTarget.transform.position);

        return behaviac.EBTStatus.BT_SUCCESS;
        ///<<< END WRITING YOUR CODE
	}

	public behaviac.EBTStatus DoChase()
	{
///<<< BEGIN WRITING YOUR CODE DoChase
        if (m_EnemyController != null && m_EnemyController.knownDetectedTarget != null)
        {
            if (m_health.currentHealth > 50)
            {
                m_EnemyController.SetNavDestination(m_EnemyController.knownDetectedTarget.transform.position);
            }
            else
            {
                m_EnemyController.SetNavDestination(2* this.transform.position - m_EnemyController.knownDetectedTarget.transform.position);
            }
            return behaviac.EBTStatus.BT_SUCCESS;
        }

        return behaviac.EBTStatus.BT_FAILURE;
        ///<<< END WRITING YOUR CODE
	}

	public behaviac.EBTStatus DoEscape()
	{
///<<< BEGIN WRITING YOUR CODE DoEscape
		return behaviac.EBTStatus.BT_INVALID;
///<<< END WRITING YOUR CODE
	}

	public behaviac.EBTStatus DoPatrol()
	{
///<<< BEGIN WRITING YOUR CODE DoPatrol
        if (m_EnemyController != null)
        {
            m_EnemyController.UpdatePathDestination();
            m_EnemyController.SetNavDestination(m_EnemyController.GetDestinationOnPath());

            return behaviac.EBTStatus.BT_SUCCESS;
        }

        return behaviac.EBTStatus.BT_FAILURE;
        ///<<< END WRITING YOUR CODE
	}

	public float GetTargetDist()
	{
///<<< BEGIN WRITING YOUR CODE GetTargetDist
        if (m_EnemyController != null && m_EnemyController.knownDetectedTarget != null)
        {
            return Vector3.Distance(m_EnemyController.transform.position, m_EnemyController.knownDetectedTarget.transform.position);
        }
        return 0f;
        ///<<< END WRITING YOUR CODE
	}

	public bool HasTarget()
	{
///<<< BEGIN WRITING YOUR CODE HasTarget
        if (m_EnemyController != null)
        {
            return m_EnemyController.hadKnownTarget;
        }
        return false;
        ///<<< END WRITING YOUR CODE
	}

	public behaviac.EBTStatus StopChase()
	{
///<<< BEGIN WRITING YOUR CODE StopChase
        if (m_EnemyController != null)
        {
            m_EnemyController.StopNavDestination();
            Debug.Log("stopped");
        }
        if (m_health.currentHealth < 50)
        {
            m_EnemyController.SetNavDestination(2 * this.transform.position - m_EnemyController.knownDetectedTarget.transform.position);
        }
        return behaviac.EBTStatus.BT_SUCCESS;
        ///<<< END WRITING YOUR CODE
	}

///<<< BEGIN WRITING YOUR CODE CLASS_PART
    public EnemyController m_EnemyController;

    private static string ExportedFilePath
    {
        get
        {
            string relativePath = "/Scripts/behaviac/exported/";

            if (Application.platform == RuntimePlatform.WindowsEditor)
            {
                return Application.dataPath + relativePath;
            }
            else if (Application.platform == RuntimePlatform.WindowsPlayer)
            {
                return Application.dataPath + relativePath;
            }
            else
            {
                return "Assets" + relativePath;
            }
        }
    }

    private bool InitBehavic()
    {
        behaviac.Debug.LogWarning("InitBehavic");

        behaviac.Workspace.Instance.FilePath = ExportedFilePath;
        behaviac.Workspace.Instance.FileFormat = behaviac.Workspace.EFileFormat.EFF_xml;

        return true;
    }

    private bool InitPlayer()
    {
        behaviac.Debug.LogWarning("InitPlayer");

        bool bRet = this.btload("HoverBotBT");
        if (bRet)
        {
            this.btsetcurrent("HoverBotBT");
        }

        return bRet;
    }

    void Awake()
    {
        InitBehavic();

        InitPlayer();
    }

    DetectionModule m_detect;
    Health m_health;
    void Start()
    {
        m_EnemyController = GetComponent<EnemyController>();
        Debug.Log(m_EnemyController.knownDetectedTarget);
        m_detect = GetComponentInChildren<DetectionModule>();
        m_health = GetComponent<Health>();
        Debug.Log("enemy attack range " + m_detect.attackRange.ToString());
        Debug.Log("enemy sight range " + m_detect.detectionRange.ToString());
    }

    behaviac.EBTStatus _status = behaviac.EBTStatus.BT_RUNNING;

    void Update()
    {
        _status = this.btexec();

    }
    ///<<< END WRITING YOUR CODE

}

///<<< BEGIN WRITING YOUR CODE FILE_UNINIT

///<<< END WRITING YOUR CODE

